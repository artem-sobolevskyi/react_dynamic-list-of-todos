{"version":3,"sources":["types/FilterBy.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterBy","TodoList","todos","changeModalState","setSelectedTodo","isModalVisible","className","map","todo","id","title","completed","cn","type","onClick","handleClick","TodoFilter","setFilterBy","setQuery","query","onChange","event","inputValue","target","value","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectedTodo","useState","selectedUser","setSelectedUser","isLoaded","setIsLoaded","getSelectedUser","a","userId","user","useEffect","href","email","name","App","todosFromServer","setTodosFromServer","isTodosLoaded","setIsTodosLoaded","setModalVisible","filterBy","setFilter","getTodosFromServer","result","filter","trim","toLowerCase","includes","Error","visibleTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7ab164b.chunk.js","sourcesContent":["export enum FilterBy {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  changeModalState: () => void;\n  setSelectedTodo: (todo: Todo) => void;\n  isModalVisible: boolean;\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    changeModalState,\n    setSelectedTodo,\n    isModalVisible,\n  },\n) => {\n  const handleClick = (todo: Todo) => {\n    changeModalState();\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n\n          return (\n            <tr data-cy=\"todo\" className=\"\" key={id}>\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                { completed\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={cn({\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleClick(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('far', {\n                      'fa-eye': !isModalVisible,\n                      'fa-eye-slash': isModalVisible,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { FilterBy } from '../../types/FilterBy';\n\ntype Props = {\n  setFilterBy: (filter:FilterBy) => void;\n  setQuery: (inputValue: string) => void;\n  query: string;\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    setFilterBy,\n    setQuery,\n    query,\n  },\n) => {\n  const handleClick = () => {\n    setQuery('');\n  };\n\n  const handleOptionClick = (inputValue:FilterBy) => {\n    setFilterBy(inputValue);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={\n              (event) => handleOptionClick(event.target.value as FilterBy)\n            }\n          >\n            <option value={FilterBy.ALL}>All</option>\n            <option value={FilterBy.ACTIVE}>Active</option>\n            <option value={FilterBy.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          { query\n            && (\n              /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={handleClick}\n              />\n            )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  changeModalState: () => void;\n  selectedTodo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = (\n  {\n    changeModalState,\n    selectedTodo,\n  },\n) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\n\n  const handleClick = () => {\n    changeModalState();\n  };\n\n  const getSelectedUser = async () => {\n    const user = await getUser(selectedTodo.userId);\n\n    setSelectedUser(user);\n    setIsLoaded(true);\n  };\n\n  useEffect(() => {\n    getSelectedUser();\n  }, []);\n\n  const {\n    id,\n    title,\n    completed,\n  } = selectedTodo;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {!isLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n            {selectedUser\n          && (\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\nimport { FilterBy } from './types/FilterBy';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [query, setQuery] = useState<string>('');\n  const [isTodosLoaded, setIsTodosLoaded] = useState<boolean>(false);\n  const [isModalVisible, setModalVisible] = useState<boolean>(false);\n  const [filterBy, setFilter] = useState(FilterBy.ALL);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const getTodosFromServer = async () => {\n    const result = await getTodos();\n\n    setTodosFromServer(result);\n    setIsTodosLoaded(true);\n  };\n\n  const setFilterBy = (filter: FilterBy) => {\n    setFilter(filter);\n  };\n\n  const visibleTodos = () => {\n    let todos = todosFromServer;\n    const normilizedQuery = query.trim().toLowerCase();\n\n    if (normilizedQuery !== '') {\n      todos = todos.filter(todo => todo.title.toLowerCase().includes(query));\n    }\n\n    switch (filterBy) {\n      case FilterBy.ACTIVE:\n        return todos.filter(todo => todo.completed === false);\n\n      case FilterBy.COMPLETED:\n        return todos.filter(todo => todo.completed === true);\n\n      case FilterBy.ALL:\n        return todos;\n      default:\n        throw new Error('Unexpected filter type');\n    }\n  };\n\n  const changeModalState = () => {\n    setModalVisible(!isModalVisible);\n  };\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilterBy={setFilterBy}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isTodosLoaded\n                && <Loader />}\n\n              {isTodosLoaded\n                && (\n                  <TodoList\n                    todos={visibleTodos()}\n                    changeModalState={changeModalState}\n                    isModalVisible={isModalVisible}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {isModalVisible && selectedTodo\n      && (\n        <TodoModal\n          changeModalState={changeModalState}\n          selectedTodo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}